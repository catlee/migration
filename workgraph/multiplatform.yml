stop-bbb:
    title: "Turn off and decommission the Buildbot Bridge"
    dependencies:
        - stop-bb-build-masters
        - stop-bb-test-masters

stop-bb-schedulers:
    # NOTE: by this time, the schedulers should not be creating any build requests (everything
    # should already be disabled)
    title: "Shut off BB Schedulers (except one for ESR et al.)"
    dependencies:
        - fuzzing
        - seta-in-tree
        - periodic-update-service
        - windows-opt-tier1
        - linux32-opt-tier1
        - linux64-opt-tier1
        - macosx-all-tier1
        - stop-bb-build-masters

stop-bb-test-masters:
    title: "Turn off the Test Buildmasters (except one of each for ESR et al.)"
    dependencies:
        - stop-bb-macosx-test-masters
        - stop-bb-linux-test-masters
        - stop-bb-windows-test-masters

stop-bb-build-masters:
    title: "Turn off the Build Buildmasters (except one of each for ESR et al.)"
    dependencies:
        - stop-releasetasks-via-bbb
        - macosx-disable-bb-builds
        - linux32-disable-bb-builds
        - linux64-disable-bb-builds
        - windows-disable-bb-builds
        - android-disable-bb-builds

seta-in-tree:
    # in-tree taskgraph generation correctly skips low-value tests
    title: "SETA support in tree"
    bug: 1287018

beetmover-worker-impl:
    # "beetworker"?
    title: "Implement and deploy a Beetmoover Worker based on scriptworker"
    bug: 1282188
    assigned: mtabara

balrog-python-api-updates:
    title: "Improve Balrog Python API"
    assigned: sfraser

balrog-worker-impl:
    title: "Implement and deploy a balorg worker based on scriptworker"
    bug: 1277871
    assigned: mtabara
    dependencies:
        - balrog-python-api-updates

automatic-retry-android-jobs:
    title: "Automatically retry Android jobs with specific kinds of failures"
    dependencies:
        - docker-worker-retry-on

docker-worker-retry-on:
    title: "Support automatically retrying on some failures in docker-worker"
    done: true

nightly-beetmover-tier2:
    title: "beetmover tasks implemented in-tree for tier2 platforms"
    assigned: mtabara
    dependencies:
        - beetmover-worker-impl

nightly-single-locale-beetmover-tier2:
    title: "beetmover tasks for single-locale builds"
    description: |
        Implement tasks for beetmover that can handle the additional complexity of
        artifact names containing locale names.
    dependencies:
        - beetmover-worker-impl

linux-tc-worker-engine:
    title: "implement a tc-worker engine that can support linux talos on hardware"
    bug: 1282011
    dependencies:
        # this will be a generalization of wander's work for OS X
        - macosx-taskcluster-worker

linux-worker-deployment-hardware:
    title: "build a method of deploying a worker for linux on hardware"
    dependencies:
        - linux-tc-worker-engine

stop-bb-linux-test-masters:
    title: "Turn off the Linux Test Buildmasters (except one for ESR et al.)"
    dependencies:
        - linux64-talos-on-hardware-100pct
        # android tests use the linux test masters
        - android-opt-tier1

docker-worker-cot-gpg-keys-in-repo:
    title: "Set up a process for generating and adding keys to the cot gpg repo for every docker-worker deployment (reimage or AMI generation)"

generic-worker-cot-gpg-keys-in-repo:
    title: "Set up a process for generating and adding keys to the cot gpg repo for every generic-worker deployment (reimage or AMI generation)"
    description: |
        The automation that creates AMIs based on OpenCloudConfig commits will create a pull request against the gpg repository with the new key,
        and block deploying the new AMI until that PR is signed and merged.

taskcluster-worker-cot-gpg-keys-in-repo:
    title: "Set up a process for generating and adding keys to the cot gpg repo for every taskcluster-worker deployment (reimage or AMI generation)"

scriptworker-chain-of-trust-verification:
    title: "Enable chain of trust verification, and block on it before scriptworker jobs"

scriptworker-queue-monitoring:
    title: "Monitor scriptworker queues and alert when too large"

scriptworker-nagios:
    title: "Monitor scriptworker instances and alert on issues"

scriptworker-iptables:
    title: "Block non-required scriptworker ports/traffic"

scriptworker-ssh-alerts:
    title: "Alerts on ssh to scriptworker instances"

scriptworker-tier1:
    title: "Scriptworker is tier1-ready"
    dependencies:
        - scriptworker-chain-of-trust-verification
        - scriptworker-queue-monitoring
        - scriptworker-nagios
        - scriptworker-ssh-alerts
        - scriptworker-iptables

separate-make-check:
    title: "Run `make check` actions in a separate task from builds"
    bug: 992323

pulse-actions-backfill:
    title: "Add support for backfilling jobs"
    bug: 1289823

pulse-actions-missing-talos:
    title: "Add support for backfilling all talos jobs on a push"
    bug: 1289824

worker-priority-support:
    title: "Support for priorities in TaskCluster workers"
    bug: 1231781

orange-builds:
    title: "Support turning some builds orange instead of red"
    bug: 1186848

scriptworker-hg-committer:
    title: "Implement a scriptworker script that can safely land commits to hg"

periodic-update-service:
    title: "Implement the periodic update service"
    bug: 1171193
    dependencies:
        - scriptworker-tier1
        - scriptworker-hg-committer

generic-worker-terminate-on-ami-update:
    # this is necessary for parity with Buildbot, where we can ship environment changes in <96 hours
    title: "Implement the ability for generic-worker instance to terminate themselves when they are idle and running an old workerType definition"

fuzzing:
    title: "Implement fuzzing in taskcluster (TBD)"
